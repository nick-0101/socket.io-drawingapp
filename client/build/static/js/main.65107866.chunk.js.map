{"version":3,"sources":["context/socket.js","components/useShareableState.jsx","components/Canvas/Canvas.jsx","components/DrawBar/DrawBar.jsx","components/ChatBar/ChatBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","socketio","connect","SocketContext","React","createContext","useShareableState","useState","sliderVal","setSliderVal","colour","setColor","erase","setErase","chatOpen","setChatOpen","Canvas","useBetween","x","y","lastX","lastY","click","mouse","setMouse","useContext","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","resize","width","window","innerWidth","height","innerHeight","style","cursor","addEventListener","on","data","image","Image","onload","drawImage","src","className","onMouseDown","onMouseMove","e","bounds","getBoundingClientRect","pageX","left","scrollX","pageY","top","scrollY","lineWidth","lineJoin","lineCap","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","base64ImageData","toDataURL","emit","draw","onMouseUp","ref","DrawBar","handleColourChange","target","getAttribute","onClick","data-col","background","xmlns","viewBox","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","fillRule","clipRule","ChatBar","yourID","setYourID","messages","setMessages","message","setMessage","username","setUsername","error","setError","userCount","setUserCount","handleChat","id","receivedMessage","value","interval","setInterval","clearInterval","oldMsgs","input","map","index","body","onChange","handleChange","placeholder","messageObject","length","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65107866.chunk.js","sourcesContent":["import React from 'react';\r\nimport socketio from 'socket.io-client';\r\nconst SOCKET_URL = 'http://localhost:3001';\r\n\r\nexport const socket = socketio.connect(SOCKET_URL);\r\nexport const SocketContext = React.createContext();\r\n","import React from 'react';\r\n\r\nconst useShareableState = () => {\r\n  const [sliderVal, setSliderVal] = React.useState(null)\r\n  const [colour, setColor] = React.useState('#000000')\r\n  const [erase, setErase] = React.useState(false)\r\n  const [chatOpen, setChatOpen] = React.useState(true);\r\n  \r\n  return {\r\n    sliderVal,\r\n    setSliderVal,\r\n    colour, \r\n    setColor,\r\n    erase,\r\n    setErase,\r\n    chatOpen, \r\n    setChatOpen,\r\n  }\r\n}\r\n\r\nexport default useShareableState","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport {SocketContext} from '../../context/socket';\r\n\r\n\r\n// Shared state\r\nimport useShareableState  from '../useShareableState'\r\nimport { useBetween } from \"use-between\";\r\n\r\n// import './Canvas.module.css';\r\n\r\nconst Canvas = () => {\r\n    // State\r\n    const { sliderVal, colour, erase } = useBetween(useShareableState);\r\n    const [mouse, setMouse] = useState({\r\n        x: 0,\r\n        y: 0,\r\n        lastX: 0,\r\n        lastY: 0,\r\n        click: false\r\n    });\r\n    // Sockets io\r\n    const socket = useContext(SocketContext);\r\n\r\n    // Draw\r\n    const canvasRef = useRef(null)\r\n\r\n    const draw = (e) => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const bounds = canvas.getBoundingClientRect();\r\n\r\n        setMouse({  \r\n            ...mouse,\r\n            x: e.pageX - bounds.left  - window.scrollX,\r\n            y: e.pageY - bounds.top - window.scrollY,\r\n            lastX: mouse.x,\r\n            lastY: mouse.y\r\n        })\r\n        ctx.lineWidth = sliderVal || 1;\r\n        ctx.lineJoin = \"round\";\r\n        ctx.lineCap = \"round\";\r\n        ctx.strokeStyle = colour;\r\n\r\n        if (mouse.click) {\r\n            if(erase) {\r\n                ctx.strokeStyle = '#262626';\r\n                ctx.beginPath();\r\n                ctx.moveTo(mouse.lastX, mouse.lastY);\r\n                ctx.lineTo(mouse.x, mouse.y);\r\n                ctx.closePath();\r\n                ctx.stroke();\r\n            } else {\r\n                ctx.beginPath();\r\n                ctx.moveTo(mouse.lastX, mouse.lastY);\r\n                ctx.lineTo(mouse.x, mouse.y);\r\n                ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n            // Convert the drawing to a image and emit it through socket\r\n            const base64ImageData = canvas.toDataURL(\"image/png\");\r\n            socket.emit(\"drawing\", base64ImageData);\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        // Resize Canvas\r\n        resize()\r\n        canvas.style.cursor = \"crosshair\";\r\n\r\n        function resize() {\r\n            ctx.canvas.width = window.innerWidth\r\n            ctx.canvas.height = window.innerHeight - 190;\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n\r\n        // When the socket recives a drawing event it draws an image on the canvas.\r\n        socket.on(\"drawing\", function(data){\r\n            const image = new Image();\r\n            image.onload = function() {\r\n                ctx.drawImage(image, 0, 0);\r\n            };\r\n            image.src = data;\r\n        })\r\n    }, [socket])\r\n\r\n    \r\n  return ( \r\n    <>\r\n        <div className='flex-grow p-4 bg-main'>\r\n            <div className='bg-gray-800 rounded'>\r\n                <canvas \r\n                    onMouseDown={() => setMouse({ ...mouse, click: true })}\r\n                    onMouseMove={(e) => draw(e)}\r\n                    onMouseUp={() => setMouse({ ...mouse, click: false })}\r\n                    ref={canvasRef}  \r\n                />\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from 'react';\r\n// import styles from './DrawBar.module.css';\r\n\r\n// Shared state\r\nimport useShareableState  from '../useShareableState'\r\nimport { useBetween } from \"use-between\";\r\n\r\nconst DrawBar = () => {\r\n    const { sliderVal, setSliderVal, setColor, erase, setErase, chatOpen, setChatOpen } = useBetween(useShareableState);\r\n    \r\n    // Colour\r\n    const handleColourChange = (e) => {\r\n        setColor(e.target.getAttribute('data-col'))\r\n    }\r\n\r\n    // Stroke\r\n    let counter = 0\r\n    const handleStrokeChange = () => {\r\n        if(sliderVal >= 30) {\r\n            counter = 0;\r\n        } else {\r\n           counter = sliderVal + 5;\r\n        }\r\n        setSliderVal(counter)\r\n    }\r\n\r\n    // Erase\r\n    const handleErase = (e) => {\r\n        setErase(!erase)\r\n    }\r\n\r\n    // Menu\r\n    const handleChat = () => {\r\n        setChatOpen(!chatOpen)\r\n    }\r\n\r\n    return (\r\n        <header className='header bg-navbar text-gray-200 py-6 px-4 flex'>\r\n            <div className='flex-1 items-center flex justify-start'>\r\n                <div className=\"flex flex-wrap\">\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#eb3434\" style={{width:'30px', height:30, background: '#eb3434'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#eb8334\" style={{width:'30px', height:30, background: '#eb8334'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#ebdf34\" style={{width:'30px', height:30, background: '#ebdf34'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#80eb34\" style={{width:'30px', height:30, background: '#80eb34'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#34ebb1\" style={{width:'30px', height:30, background: '#34ebb1'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#34e8eb\" style={{width:'30px', height:30, background: '#34e8eb'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#3446eb\" style={{width:'30px', height:30, background: '#3446eb'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#9934eb\" style={{width:'30px', height:30, background: '#9934eb'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#eb34df\" style={{width:'30px', height:30, background: '#eb34df'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#ffffff\" style={{width:'30px', height:30, background: '#ffffff'}}></div>\r\n                    <div onClick={(e => handleColourChange(e))} className=\"m-1\" data-col=\"#000000\" style={{width:'30px', height:30, background: '#000000'}}></div>\r\n                </div>\r\n                {/* Stroke */}\r\n                <div className=\"mx-2 text-gray-200\">\r\n                    <button onClick={(e => handleStrokeChange(e))} className=\"focus:outline-none py-3 px-3 bg-gray-800 rounded-lg text-gray-100 shadow-lg\">\r\n                        {sliderVal ? <div className=\"w-5 h-5\">{sliderVal}</div> : \r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                <path d=\"M3 21v-4a4 4 0 1 1 4 4h-4\" />\r\n                                <path d=\"M21 3a16 16 0 0 0 -12.8 10.2\" />\r\n                                <path d=\"M21 3a16 16 0 0 1 -10.2 12.8\" />\r\n                                <path d=\"M10.6 9a9 9 0 0 1 4.4 4.4\" />\r\n                            </svg>\r\n                        }\r\n                    </button>\r\n                </div>\r\n                {/* Erase */}\r\n                <div className=\"my-2 md:mx-2 text-gray-200\">\r\n                    <button onClick={(e => handleErase(e))} className={erase ? \"py-3 px-3 bg-gray-800 rounded-lg text-gray-100 shadow-lg focus:outline-none ring border-blue-300\" : \"focus:outline-none py-3 px-3 bg-gray-800 rounded-lg text-gray-100 shadow-lg\"}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                            <path d=\"M19 19h-11l-4 -4a1 1 0 0 1 0 -1.41l10 -10a1 1 0 0 1 1.41 0l5 5a1 1 0 0 1 0 1.41l-9 9\" />\r\n                            <line x1=\"18\" y1=\"12.3\" x2=\"11.7\" y2=\"6\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {/* Close Menu */}\r\n            <div className=\"mx-2 flex items-center flex justify-end text-gray-200\">\r\n                <button onClick={handleChat} className=\"py-3 px-3 bg-indigo-500 rounded-lg text-gray-100\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n          </header>\r\n    )\r\n    \r\n}\r\n\r\nexport default DrawBar;","import React, { useEffect, useRef, useContext, useState } from 'react';\r\nimport {SocketContext} from '../../context/socket';\r\n\r\n// Shared state\r\nimport useShareableState  from '../useShareableState'\r\nimport { useBetween } from \"use-between\";\r\n\r\nconst ChatBar = () => {\r\n    const { chatOpen, setChatOpen } = useBetween(useShareableState);\r\n    const [yourID, setYourID] = useState();\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [username, setUsername] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [userCount, setUserCount] = useState('')\r\n\r\n    // Menu\r\n    const handleChat = () => {\r\n        setChatOpen(!chatOpen)\r\n    }\r\n\r\n    // Sockets IO\r\n    const socket = useContext(SocketContext);\r\n\r\n    useEffect(() => {\r\n        // Connect Socket\r\n        socket.on(\"your id\", id => {\r\n            setYourID(id);\r\n        })\r\n\r\n        socket.on(\"send message\", (message) => {\r\n            receivedMessage(message)\r\n        })\r\n        \r\n        socket.on(\"user count\", value => {\r\n            setUserCount(value);\r\n        })\r\n\r\n        socket.on(\"user count\", value => {\r\n            setUserCount(value);\r\n        })\r\n\r\n        const interval = setInterval(() => {\r\n            socket.on(\"user count\", value => {\r\n                setUserCount(value);\r\n            })\r\n        }, 20000);\r\n\r\n        // Unmount\r\n        return () => clearInterval(interval);\r\n    }, [socket])\r\n\r\n    // Recive Messages\r\n    const receivedMessage = (message) => {\r\n        setMessages(oldMsgs => [...oldMsgs, message]);\r\n    }\r\n\r\n    // Send Messages\r\n    const sendToSocket = () => {\r\n        if(!message) {\r\n            return\r\n        }\r\n\r\n        const messageObject = {\r\n            body: message,\r\n            id: yourID,\r\n            username: username,\r\n        };\r\n        socket.emit(\"message\", messageObject);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    // Handle Change\r\n     const handleChange = (e) => {\r\n        setMessage(e.target.value)\r\n    }\r\n\r\n    // Username\r\n    const input = useRef()\r\n\r\n    const handleUsername = () => {\r\n        if(input.current.value === '' || input.current.value.length <= 3) {\r\n            setError('Username needs to be 3 or more characters.')\r\n            return \r\n        } else {\r\n            setUsername(input.current.value)\r\n        }\r\n    }\r\n    return (\r\n        <>  \r\n        {username ? \r\n            <div className={chatOpen ? 'hidden' : 'w-full absolute bottom-0 right-0'}>\r\n                <aside className='w-100 bg-sidebar h-screen relative'>\r\n                    <div className=\"flex items-center flex justify-end text-gray-200 py-6 px-4\">\r\n                        <button onClick={handleChat} className=\"py-3 px-3 bg-indigo-500 rounded-lg text-gray-100\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='py-4 mb-auto'>\r\n                        <div className=\"text-center p-4 text-gray-200 font-bold \">{userCount} users are in the chat.</div>\r\n                        {messages.map((message, index) => {\r\n                            if (message.id === yourID) {\r\n                                return (<>\r\n                                    <div className=\"bg-sidebar\" key={index}>\r\n                                        <p className=\"text-right px-4 pb-2 text-gray-200\">{message.username}</p> \r\n                                        <div className=\"px-4 flex justify-end text-right text-gray-200\">\r\n                                            <p className=\"bg-indigo-700 p-4 rounded-lg\">{message.body}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                            return (<>\r\n                                <div className=\"bg-sidebar\" key={index}>\r\n                                    <p className=\"px-4 pb-2 text-gray-200\">{message.username}</p> \r\n                                    <div className=\"px-4 flex justify-start text-left\">\r\n                                    <p className=\"text-gray-700 bg-gray-50 p-4 rounded-lg\">{message.body}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </>)\r\n                        })}\r\n                    </div>\r\n                </aside>\r\n                <div className='fixed bg-sidebar px-4 inset-x-0 bottom-0'>\r\n                    <ul className='flex flex-col w-full'>\r\n                        <textarea onChange={(e => handleChange(e))} value={message} className=\"h-20 resize-none text-gray-100 p-4 bg-gray-700 rounded-lg\" placeholder=\"Send a message..\"></textarea>\r\n                        <button onClick={sendToSocket} className=\"my-4 py-3 px-4 bg-indigo-500 rounded-lg text-gray-100\">Send Message</button>\r\n                    </ul>\r\n                </div>\r\n            </div> \r\n            \r\n            :\r\n  \r\n            <div className={chatOpen ? 'hidden' : 'w-full absolute bottom-0 right-0'}>\r\n                <aside className='sidebar w-100 bg-sidebar h-screen relative'>\r\n                    <div className=\"flex items-center flex justify-end text-gray-200 py-6 px-4\">\r\n                        <button onClick={handleChat} className=\"py-3 px-3 bg-indigo-500 rounded-lg text-gray-100\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='flex flex-col px-4 mx-auto max-w-md'>\r\n                        <div className=\"text-white text-3xl font-bold text-center my-5\">Create a Username</div>\r\n                        {error ? <div className=\"my-3 text-center text-red-600\">{error}</div> : null}\r\n                        <input ref={input} className=\"resize-none text-gray-100 p-4 bg-gray-700 rounded-lg\" placeholder=\"Enter a username..\"/>\r\n                        <button onClick={(e => handleUsername(e))} className=\"my-4 py-3 px-4 bg-indigo-500 rounded-lg text-gray-100\">Submit</button>\r\n                    </div>\r\n                </aside>\r\n            </div> \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatBar;","import React from 'react';\nimport { SocketContext, socket } from './context/socket';\n// Components\nimport { Canvas, DrawBar, ChatBar } from './components';\nimport './App.css';\n\nfunction App() {\n  //flex flex-grow\n  return (\n    <SocketContext.Provider value={socket}>\n      <div className='min-h-screen bg-gray-100 text-gray-800'>\n        <main className='main flex flex-col flex-grow md:ml-0'>\n          <DrawBar />\n          <Canvas />\n          <footer className='footer px-4 py-6 bg-navbar'>\n            <div className='footer-content'>\n              <p className='text-sm text-gray-200 text-center'>\n                © Bruh 2021. All rights reserved.{' '}\n              </p>\n            </div>\n          </footer>\n        </main>\n        <ChatBar />\n      </div>\n    </SocketContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}